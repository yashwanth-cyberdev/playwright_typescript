name: Playwright-Tests
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup-and-run-tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    environment: production
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3]
        shardTotal: [3]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run regression only
        if: github.event_name == 'push'
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: npx playwright test --project=tests --shard ${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --workers 2 --reporter=ctrf

      - name: Upload blob report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 90

      - name: Upload CTRF report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ctrf-report-${{ matrix.shardIndex }}
          path: ctrf
          retention-days: 90

  merge-reports-and-upload:
    if: always()
    needs: [setup-and-run-tests]
    runs-on: ubuntu-latest
    environment: production

    outputs:
      timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:
      - name: Set a timestamp
        id: timestampid
        run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci

      - name: Install jq
        run: sudo apt-get install jq

      - name: Download blob reports
        uses: actions/download-artifact@v3
        with:
          pattern: blob-report-*
          path: downloaded-blob-reports

      - name: Download CTRF reports
        uses: actions/download-artifact@v4
        with:
          pattern: ctrf-report-*
          path: downloaded-ctrf-reports
          merge-multiple: true

      - name: Install and merge CTRF reports
        run: |
          npm install -g ctrf-cli
          mkdir -p test-ctrf
          npx ctrf merge ./downloaded-ctrf-reports --output test-ctrf/ctrf-report.json

      - name: List files in the ctrf directory
        run: |
          echo "Files in ctrf directory:"
          ls -l test-ctrf

      - name: Merge blob reports
        run: npx playwright merge-reports --reporter html ./downloaded-blob-reports

      - name: Upload full html report to artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ steps.timestampid.outputs.timestamp }}
          path: playwright-report
          retention-days: 90

      - name: Push the new files to github pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          destination_dir: ${{ steps.timestampid.outputs.timestamp }}

      - name: Write URL in summary
        id: report_url
        run: |
          reportUrl="https://${{ github.repository_owner }}.github.io/playwright_typescript/${{ steps.timestampid.outputs.timestamp }}/"
          echo "### Test results (link available after 20 secs) - $reportUrl" >> $GITHUB_STEP_SUMMARY
          echo "report_url=$reportUrl" >> $GITHUB_OUTPUT

      - name: Publish CTRF Test Summary Results
        run: npx github-actions-ctrf summary test-ctrf/ctrf-report.json
        if: always()

      - name: Send Test Results to Slack
        if: always()
        run: |
          npx slack-ctrf results test-ctrf/ctrf-report.json
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack channel of Playwright
        uses: rtCamp/action-slack-notify@v2.0.2
        env:
          SLACK_CHANNEL: playwright-project
          SLACK_COLOR: "#3278BD"
          SLACK_ICON: https://avatars0.githubusercontent.com/u/44036562?s=100&v=4
          SLACK_MESSAGE: "Playwright Test Report available: ${{ steps.report_url.outputs.report_url }}"
          SLACK_TITLE: Playwright Test Report
          SLACK_USERNAME: Github Action Bot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
